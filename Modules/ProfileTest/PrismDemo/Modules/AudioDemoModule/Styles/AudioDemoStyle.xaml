<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prism="http://prismlibrary.com/"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:local="clr-namespace:AudioDemoModule.Styles">

    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
        <Setter Property="Content" Value="{Binding Content}"/>
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="MinWidth" Value="100"/>
    </Style>

    <Style x:Key="BaseOMENButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
        <Setter Property="Content" Value="{Binding MenuName}"/>
        <Setter Property="Command" Value="{Binding MenuCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding MenuData}"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="MinWidth" Value="100"/>
    </Style>

    <Style x:Key="PresetControlButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource BaseRadioButtonStyle}">
        <Setter Property="GroupName" Value="PresetControl"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="AudioControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{Binding MenuEnabled, Converter={StaticResource BoolToColorConverter}}"/>
        <!--<Setter Property="Content" Value="{Binding MenuName}"/>-->
        <Setter Property="Command" Value="{Binding MenuCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding MenuData}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
    </Style>

    <Style x:Key="AudioControlTextBoxStyle" BasedOn="{StaticResource BaseTextBoxStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style x:Key="EQBandTextStyle" BasedOn="{StaticResource BaseTextBoxStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <DataTemplate x:Key="FeatureSupportTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding FeatureName}" TextWrapping="Wrap" FontSize="18" Foreground="White" VerticalAlignment="Center" Width="200"/>
            <Image Source="{Binding FeatureSupportImage}" Stretch="Fill" Width="150" Height="50"/>
        </StackPanel>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="FeatureSupportPanel">
        <StackPanel/>
    </ItemsPanelTemplate>

    <DataTemplate x:Key="EQModeButtonTemplate">
        <Button Style="{Binding MenuStyle}"/>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="DefButtonPanelTemplate">
        <StackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="WarpButtonPanelTemplate">
        <WrapPanel/>
    </ItemsPanelTemplate>

    <DataTemplate x:Key="AudioControlTemplate">
        <StackPanel>
            <ContentControl DataContext="{Binding ControlTitle}" Template="{StaticResource TextBoxTipTemplate}"/>
            <StackPanel Orientation="Horizontal">
                <Button DataContext="{Binding MuteControl}" Style="{Binding MenuStyle}"/>
                <Slider Width="200" DataContext="{Binding SliderControl}" Style="{Binding MenuStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <prism:InvokeCommandAction Command="{Binding SliderValueChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock Text="{Binding SliderControl.SliderValue}" Style="{StaticResource BaseTextBoxStyle}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MonitorAudioControlTemplate">
        <StackPanel>
            <ContentControl DataContext="{Binding ControlTitle}" Template="{StaticResource TextBoxTipTemplate}"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding SliderControl.SliderValue}" Style="{StaticResource BaseTextBoxStyle}"/>
                <Slider Width="200" DataContext="{Binding SliderControl}" Style="{Binding MenuStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <prism:InvokeCommandAction Command="{Binding SliderValueChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock Text="{Binding SliderControl.AudioValue}" Style="{StaticResource BaseTextBoxStyle}"/>
                <Button DataContext="{Binding MuteControl}" Style="{Binding MenuStyle}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="EQBandControlTemplate" TargetType="ContentControl">
        <StackPanel Margin="10,0" Visibility="{Binding EQBandName.MenuVisibility, Converter={StaticResource BoolToVisibility}}">
            <TextBlock Text="{Binding EQBandSlider.SliderValue}" Style="{StaticResource BaseTextBoxStyle}" HorizontalAlignment="Center"/>
            <Slider Height="200" Orientation="Vertical" DataContext="{Binding EQBandSlider}" Style="{Binding MenuStyle}" HorizontalAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <prism:InvokeCommandAction Command="{Binding SliderValueChanged}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Slider>
            <TextBlock DataContext="{Binding EQBandName}" Style="{StaticResource EQBandTextStyle}"/>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="VerticalBandStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{StaticResource EQBandControlTemplate}"/>
    </Style>

    <ControlTemplate x:Key="HBandControlTemplate" TargetType="ContentControl">
        <StackPanel Orientation="Horizontal" Margin="0,10">
            <TextBlock DataContext="{Binding EQBandName}" Style="{StaticResource EQBandTextStyle}" VerticalAlignment="Center"/>
            <Slider Width="200" DataContext="{Binding EQBandSlider}" Style="{Binding MenuStyle}" VerticalAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <prism:InvokeCommandAction Command="{Binding SliderValueChanged}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Slider>
            <TextBlock Text="{Binding EQBandSlider.SliderValue}" Style="{StaticResource BaseTextBoxStyle}" VerticalAlignment="Center"/>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="HorizeBandStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{StaticResource HBandControlTemplate}"/>
    </Style>

    <DataTemplate x:Key="EQBandTemplate">
        <ContentControl Style="{StaticResource VerticalBandStyle}"/>
    </DataTemplate>
    <DataTemplate x:Key="HBandTemplate">
        <ContentControl Style="{StaticResource HorizeBandStyle}"/>
    </DataTemplate>
    <DataTemplate x:Key="EQBandsTemplate">
        <RadioButton Style="{Binding MenuStyle}"/>
    </DataTemplate>

    <!--Custom Slider-->
    <Style x:Key="SliderToolTipHorizonStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Canvas.Bottom" Value="2.5"/>
        <Setter Property="Canvas.Right" Value="{Binding ElementName=Ellipse, Path=Width}"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Polygon Fill="White"
                                 Stretch="Fill"
                                 Points="0 0,0 5,20 5,30 2.5,20 0,0 0"/>
                        <DockPanel>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}, Path=Value}"
                                       Foreground="Red"
                                       TextAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontSize="12" FontFamily="Gotham" 
                                       Width="20"
                                       TextWrapping="Wrap"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CircleSliderThumbVertical" TargetType="{x:Type Thumb}">
        <Grid>
            <Ellipse Width="16" Height="16" Name="Ellipse"/>
            <Canvas>
                <ContentControl x:Name="TipContent" Style="{StaticResource SliderToolTipHorizonStyle}" Visibility="Collapsed"/>
            </Canvas>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TipContent" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter TargetName="Ellipse" Property="Fill" Value="#eeeeee"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SliderToolTipVerticalStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Canvas.Bottom" Value="{Binding ElementName=Ellipse, Path=Height}"/>
        <Setter Property="Canvas.Left" Value="-2.5"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Polygon Fill="White"
                                 Stretch="Fill"
                                 Points="0 0,-2.5 -10,-2.5 -30,2.5 -30,2.5 -10,0 0"/>
                        <DockPanel>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}, Path=Value}"
                                       Foreground="Red"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="12" FontFamily="Gotham" 
                                       Width="20"
                                       TextWrapping="Wrap"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CircleSliderThumbHorizontal" TargetType="{x:Type Thumb}">
        <Grid>
            <Ellipse Width="16" Height="16" Name="Ellipse"/>
            <Canvas>
                <ContentControl x:Name="TipContent" Style="{StaticResource SliderToolTipVerticalStyle}" Visibility="Collapsed"/>
            </Canvas>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TipContent" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource SliderThumb.Disabled.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter TargetName="Ellipse" Property="Fill" Value="#eeeeee"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomSliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" VerticalAlignment="Center" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                <Border x:Name="TrackBackground" Height="16.0" Margin="8,0" Grid.Row="1">
                    <Grid>
                        <Border x:Name="TrackMask" BorderThickness="1" Height="{Binding ElementName=TrackBackground, Path=Height}" CornerRadius="8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop  Color="#FF2C2C2C" Offset="0"/>
                                    <GradientStop  Color="#FF212121" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Canvas Margin="-8,0" Height="{Binding ElementName=TrackBackground, Path=Height}">
                            <Canvas.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=TrackMask}"/>
                            </Canvas.OpacityMask>
                            <Rectangle x:Name="PART_SelectionRange" Height="{Binding ElementName=TrackBackground, Path=Height}" Visibility="Hidden">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0.5,1">
                                        <GradientStop Color="#FFF9350F" Offset="0.5"/>
                                        <GradientStop Color="#FFFFA338" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Canvas>
                    </Grid>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource CircleSliderThumbHorizontal}" VerticalAlignment="Center" Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                <!--Set Selection Range-->
                <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}" />
                <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <!--Set Enabled State-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="PART_SelectionRange" Value="{StaticResource SliderThumb.Disabled.Background}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomMonitorSliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" VerticalAlignment="Center" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                <Border x:Name="TrackBackground" Height="16.0" Margin="8,0" Grid.Row="1">
                    <Grid>
                        <Border x:Name="TrackMask" BorderThickness="1" Height="{Binding ElementName=TrackBackground, Path=Height}" CornerRadius="8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop  Color="#FF2C2C2C" Offset="0"/>
                                    <GradientStop  Color="#FF212121" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Canvas Margin="-8,0" Height="{Binding ElementName=TrackBackground, Path=Height}">
                            <Canvas.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=TrackMask}"/>
                            </Canvas.OpacityMask>
                            <Rectangle x:Name="PART_SelectionRange" Height="{Binding ElementName=TrackBackground, Path=Height}" Visibility="Hidden">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0.5,1">
                                        <GradientStop Color="#FFF9350F" Offset="0.5"/>
                                        <GradientStop Color="#FFFFA338" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Canvas>
                    </Grid>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource CircleSliderThumbHorizontal}" VerticalAlignment="Center" Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                <!--Set Selection Range-->
                <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}" />
                <Setter Property="SelectionEnd" Value="{Binding AudioValue}" />
            </Trigger>
            <!--Set Enabled State-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="PART_SelectionRange" Value="{StaticResource SliderThumb.Disabled.Background}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomSliderVertical" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                <Border x:Name="TrackBackground" Grid.Column="1" Margin="0,8" Width="16.0">
                    <Grid>
                        <Border x:Name="TrackMask" BorderThickness="1" Width="{Binding ElementName=TrackBackground, Path=Width}" CornerRadius="8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop  Color="#FF2C2C2C" Offset="0"/>
                                    <GradientStop  Color="#FF212121" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Canvas Margin="0,-8" Width="{Binding ElementName=TrackBackground,Path=Width}">
                            <Canvas.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=TrackMask}"/>
                            </Canvas.OpacityMask>
                            <Rectangle x:Name="PART_SelectionRange" Width="{Binding ElementName=TrackBackground,Path=Width}" Visibility="Hidden">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="1,0.5">
                                        <GradientStop Color="#FFFFA338" Offset="1"/>
                                        <GradientStop Color="#FFF9350F" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Canvas>
                    </Grid>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource CircleSliderThumbVertical}" VerticalAlignment="Top" Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                <!--Set Selection Range-->
                <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}" />
                <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <!--Set Enabled State-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="PART_SelectionRange" Value="{StaticResource SliderThumb.Disabled.Background}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomAudioSlider" BasedOn="{StaticResource BaseCustomSlider}" TargetType="{x:Type Slider}">
        <Setter Property="Maximum" Value="{Binding MaxValue}"/>
        <Setter Property="Minimum" Value="{Binding MinValue}"/>
        <Setter Property="TickFrequency" Value="{Binding Step}"/>
        <Setter Property="Value" Value="{Binding SliderValue}"/>
        <Setter Property="AutoToolTipPlacement" Value="None"/>
        <Setter Property="IsSelectionRangeEnabled" Value="True"/>
        <Setter Property="Template" Value="{StaticResource CustomSliderHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource CustomSliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomMonitorAudioSlider" BasedOn="{StaticResource BaseCustomSlider}" TargetType="{x:Type Slider}">
        <Setter Property="Maximum" Value="{Binding MaxValue}"/>
        <Setter Property="Minimum" Value="{Binding MinValue}"/>
        <Setter Property="TickFrequency" Value="{Binding Step}"/>
        <Setter Property="Value" Value="{Binding SliderValue}"/>
        <Setter Property="AutoToolTipPlacement" Value="None"/>
        <Setter Property="IsSelectionRangeEnabled" Value="True"/>
        <Setter Property="Template" Value="{StaticResource CustomMonitorSliderHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource CustomSliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>